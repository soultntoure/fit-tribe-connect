generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  password       String
  firstName      String?
  lastName       String?
  profilePicture String?
  bio            String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  bookings       Booking[]
  classesTaught  FitnessClass[]
  roles          Role[]
  @@map("users")
}

model FitnessClass {
  id            String   @id @default(cuid())
  name          String
  description   String?
  startTime     DateTime
  endTime       DateTime
  capacity      Int
  currentBookings Int      @default(0)
  instructorId  String
  studioName    String?
  location      String?
  price         Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  instructor    User     @relation(fields: [instructorId], references: [id])
  bookings      Booking[]
  @@map("fitness_classes")
}

model Booking {
  id              String     @id @default(cuid())
  userId          String
  classId         String
  bookingTime     DateTime   @default(now())
  status          BookingStatus @default(CONFIRMED)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  user            User       @relation(fields: [userId], references: [id])
  fitnessClass    FitnessClass @relation(fields: [classId], references: [id])
  @@map("bookings")
}

model Role {
  id   String @id @default(cuid())
  name RoleName
  users User[]
  @@map("roles")
}

enum RoleName {
  USER
  INSTRUCTOR
  ADMIN
}

enum BookingStatus {
  CONFIRMED
  CANCELLED
  COMPLETED
}
